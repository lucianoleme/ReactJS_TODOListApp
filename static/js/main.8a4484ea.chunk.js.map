{"version":3,"sources":["components/TodoListItem.js","components/TodosList.js","components/layout/Header.js","components/AddTodoListItem.js","components/TodoListApp.js","index.js"],"names":["TodoListItem","this","props","dataItem","completed","id","title","className","type","checked","onChange","handleChange","style","fontStyle","color","textDecoration","onClick","deleteTodoListItem","Component","TodosList","todosList","map","key","React","Header","backgroundColor","padding","fontSize","lineHeight","margin","AddTodoListItem","state","e","setState","target","name","value","onSubmit","preventDefault","addTodoListItem","placeholder","TodoListApp","uuid","todo","filter","newTodoItem","ReactDOM","render","document","getElementById"],"mappings":"sOA8BeA,EA5Bf,uKACY,IAAD,SAM0BC,KAAKC,MAAMC,SAApCC,EAND,EAMCA,UAAWC,EANZ,EAMYA,GAAIC,EANhB,EAMgBA,MACvB,OACE,wBAAIC,UAAU,aACZ,2BACEC,KAAK,WACLC,QAASL,EACTM,SAAU,kBAAM,EAAKR,MAAMS,aAAaN,MAE1C,0BAAMO,MAAOR,EAbM,CACrBS,UAAW,SACXC,MAAO,UACPC,eAAgB,eAU4B,MAAOT,GACjD,4BACEC,UAAU,YACVS,QAAS,kBAAM,EAAKd,MAAMe,mBAAmBZ,KAE5C,IAJH,IAKI,UArBZ,GAAkCa,aC4BnBC,E,uKA1BH,IAAD,OACP,OACE,6BACGlB,KAAKC,MAAMkB,UAAUC,KAAI,SAAClB,GAAD,OACxB,kBAAC,EAAD,CACEmB,IAAKnB,EAASE,GACdF,SAAUA,EACVQ,aAAc,EAAKT,MAAMS,aACzBM,mBAAoB,EAAKf,MAAMe,6B,GATnBM,IAAML,WCefM,EAfA,WAMb,OACE,4BAAQZ,MANU,CAClBa,gBAAiB,UACjBX,MAAO,OACPY,QAAS,cAIP,wBAAId,MAAO,CAAEe,SAAU,OAAQC,WAAY,UAAWC,OAAQ,QAA9D,kB,OCoBSC,E,4MA5BbC,MAAQ,CACNzB,MAAO,I,EAETI,SAAW,SAACsB,GACV,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAE5CC,SAAW,SAACL,GACVA,EAAEM,iBACF,EAAKpC,MAAMqC,gBAAgB,EAAKR,MAAMzB,OACtC,EAAK2B,SAAS,CAAE3B,MAAO,M,uDAGvB,OACE,0BAAMC,UAAU,iBAAiB8B,SAAUpC,KAAKoC,UAC9C,2BACE7B,KAAK,OACLgC,YAAY,oBACZjC,UAAU,aACV4B,KAAK,QACLC,MAAOnC,KAAK8B,MAAMzB,MAClBI,SAAUT,KAAKS,WAEjB,2BAAOF,KAAK,SAASgC,YAAY,SAASjC,UAAU,sB,GAvB9BW,a,QCsEfuB,E,4MAjEbV,MAAQ,CACNX,UAAW,CACT,CACEf,GAAIqC,cACJpC,MAAO,gCACPF,WAAW,GAEb,CACEC,GAAIqC,cACJpC,MAAO,mCACPF,WAAW,GAEb,CACEC,GAAIqC,cACJpC,MAAO,wBACPF,WAAW,K,EAIjBO,aAAe,SAACN,GACd,EAAK4B,SAAS,CACZb,UAAW,EAAKW,MAAMX,UAAUC,KAAI,SAACsB,GAInC,OAHIA,EAAKtC,KAAOA,IACdsC,EAAKvC,WAAauC,EAAKvC,WAElBuC,Q,EAIb1B,mBAAqB,SAACZ,GACpB,EAAK4B,SAAS,CACZb,UAAU,YACL,EAAKW,MAAMX,UAAUwB,QAAO,SAACzC,GAC9B,OAAOA,EAASE,KAAOA,S,EAK/BkC,gBAAkB,SAACjC,GACjB,IAAMuC,EAAc,CAClBxC,GAAIqC,cACJpC,MAAOA,EACPF,WAAW,GAEb,EAAK6B,SAAS,CAAEb,UAAU,GAAD,mBAAM,EAAKW,MAAMX,WAAjB,CAA4ByB,O,uDAIrD,OACE,yBAAKtC,UAAU,aACb,kBAAC,EAAD,MAIA,kBAAC,EAAD,CAAiBgC,gBAAiBtC,KAAKsC,kBACvC,kBAAC,EAAD,CACEnB,UAAWnB,KAAK8B,MAAMX,UACtBT,aAAcV,KAAKU,aACnBM,mBAAoBhB,KAAKgB,0B,GA3DTM,IAAML,WCDhC4B,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.8a4484ea.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nexport class TodoListItem extends Component {\r\n  render() {\r\n    const completedStyle = {\r\n      fontStyle: \"italic\",\r\n      color: \"#c5e2d2\",\r\n      textDecoration: \"line-though\",\r\n    }\r\n    const { completed, id, title } = this.props.dataItem\r\n    return (\r\n      <li className=\"todo-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={completed}\r\n          onChange={() => this.props.handleChange(id)}\r\n        />\r\n        <span style={completed ? completedStyle : null}>{title}</span>\r\n        <button\r\n          className=\"btn-style\"\r\n          onClick={() => this.props.deleteTodoListItem(id)}\r\n        >\r\n          {\" \"}\r\n          X{\" \"}\r\n        </button>\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoListItem\r\n","import React from \"react\"\r\nimport TodoListItem from \"./TodoListItem\"\r\n\r\nclass TodosList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.todosList.map((dataItem) => (\r\n          <TodoListItem\r\n            key={dataItem.id}\r\n            dataItem={dataItem}\r\n            handleChange={this.props.handleChange}\r\n            deleteTodoListItem={this.props.deleteTodoListItem}\r\n          />\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// function TodosList(props) {\r\n//   return (\r\n//     <div>\r\n//       {props.todosList.map((dataItem) => (\r\n//         <li key={dataItem.id}>{dataItem.title}</li>\r\n//       ))}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\nexport default TodosList\r\n","import React from \"react\"\r\n\r\n//function Header()  (esta linha Ã© 'igual' a de baixo)\r\nconst Header = () => {\r\n  const headerStyle = {\r\n    backgroundColor: \"#678c89\",\r\n    color: \"#fff\",\r\n    padding: \"10px 15px\",\r\n  }\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1 style={{ fontSize: \"25px\", lineHeight: \"1.447em\", margin: \"0px\" }}>\r\n        TodoList App\r\n      </h1>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from \"react\"\r\n\r\nclass AddTodoListItem extends Component {\r\n  state = {\r\n    title: \"\",\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n  onSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.addTodoListItem(this.state.title)\r\n    this.setState({ title: \"\" })\r\n  }\r\n  render() {\r\n    return (\r\n      <form className=\"form-container\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Cadastrar TODO...\"\r\n          className=\"input-text\"\r\n          name=\"title\"\r\n          value={this.state.title}\r\n          onChange={this.onChange}\r\n        />\r\n        <input type=\"submit\" placeholder=\"Enviar\" className=\"input-submit\" />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddTodoListItem\r\n","import React from \"react\"\r\nimport TodosList from \"./TodosList\"\r\nimport Header from \"./layout/Header\"\r\nimport AddTodoListItem from \"./AddTodoListItem\"\r\nimport { v4 as uuid } from \"uuid\"\r\n\r\nclass TodoListApp extends React.Component {\r\n  state = {\r\n    todosList: [\r\n      {\r\n        id: uuid(),\r\n        title: \"Setup development environment\",\r\n        completed: true,\r\n      },\r\n      {\r\n        id: uuid(),\r\n        title: \"Develop web site and add content\",\r\n        completed: false,\r\n      },\r\n      {\r\n        id: uuid(),\r\n        title: \"Deploy to live server\",\r\n        completed: false,\r\n      },\r\n    ],\r\n  }\r\n  handleChange = (id) => {\r\n    this.setState({\r\n      todosList: this.state.todosList.map((todo) => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed\r\n        }\r\n        return todo\r\n      }),\r\n    })\r\n  }\r\n  deleteTodoListItem = (id) => {\r\n    this.setState({\r\n      todosList: [\r\n        ...this.state.todosList.filter((dataItem) => {\r\n          return dataItem.id !== id\r\n        }),\r\n      ],\r\n    })\r\n  }\r\n  addTodoListItem = (title) => {\r\n    const newTodoItem = {\r\n      id: uuid(),\r\n      title: title,\r\n      completed: false,\r\n    }\r\n    this.setState({ todosList: [...this.state.todosList, newTodoItem] })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header />\r\n        {/* {this.state.todosList.map((dataItem) => (\r\n          <li>{dataItem.title}</li>\r\n        ))} */}\r\n        <AddTodoListItem addTodoListItem={this.addTodoListItem} />\r\n        <TodosList\r\n          todosList={this.state.todosList}\r\n          handleChange={this.handleChange}\r\n          deleteTodoListItem={this.deleteTodoListItem}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoListApp\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./App.css\"\nimport TodoListApp from \"./components/TodoListApp\"\n\nReactDOM.render(<TodoListApp />, document.getElementById(\"root\"))\n"],"sourceRoot":""}